// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_content/test/unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:firebase_storage/firebase_storage.dart' as _i6;
import 'package:flutter_content/flutter_content.dart' as _i5;
import 'package:flutter_content/src/model/model_repo.dart' as _i3;
import 'package:flutter_content/src/snippet/snodes/widget/fs_folder_node.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFSFolderNode_0 extends _i1.SmartFake implements _i2.FSFolderNode {
  _FakeFSFolderNode_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IModelRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockModelRepository extends _i1.Mock implements _i3.IModelRepository {
  @override
  _i4.Future<_i5.SnippetInfoModel?> getSnippetInfoFromCacheOrFB(
          {required String? snippetName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSnippetInfoFromCacheOrFB,
          [],
          {#snippetName: snippetName},
        ),
        returnValue: _i4.Future<_i5.SnippetInfoModel?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.SnippetInfoModel?>.value(),
      ) as _i4.Future<_i5.SnippetInfoModel?>);

  @override
  _i4.Future<_i5.SnippetRootNode?> loadVersionFromFBIntoCache({
    required _i5.SnippetInfoModel? snippetInfo,
    required String? versionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVersionFromFBIntoCache,
          [],
          {
            #snippetInfo: snippetInfo,
            #versionId: versionId,
          },
        ),
        returnValue: _i4.Future<_i5.SnippetRootNode?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.SnippetRootNode?>.value(),
      ) as _i4.Future<_i5.SnippetRootNode?>);

  @override
  _i4.Future<String?> getGcrServerUrl() => (super.noSuchMethod(
        Invocation.method(
          #getGcrServerUrl,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<_i5.AppInfoModel?> getAppInfo() => (super.noSuchMethod(
        Invocation.method(
          #getAppInfo,
          [],
        ),
        returnValue: _i4.Future<_i5.AppInfoModel?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.AppInfoModel?>.value(),
      ) as _i4.Future<_i5.AppInfoModel?>);

  @override
  _i4.Future<void> saveAppInfo() => (super.noSuchMethod(
        Invocation.method(
          #saveAppInfo,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateSnippetProps({
    required String? snippetName,
    String? editingVersionId,
    String? publishingVersionId,
    bool? autoPublish,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSnippetProps,
          [],
          {
            #snippetName: snippetName,
            #editingVersionId: editingVersionId,
            #publishingVersionId: publishingVersionId,
            #autoPublish: autoPublish,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> saveSnippetVersion({
    required String? snippetName,
    required String? newVersionId,
    required _i5.SnippetRootNode? newVersion,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSnippetVersion,
          [],
          {
            #snippetName: snippetName,
            #newVersionId: newVersionId,
            #newVersion: newVersion,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> deleteSnippet(String? snippetName) => (super.noSuchMethod(
        Invocation.method(
          #deleteSnippet,
          [snippetName],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteSnippetVersions(
    String? snippetName,
    List<String>? tbd,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSnippetVersions,
          [
            snippetName,
            tbd,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> saveVote({
    required String? pollName,
    required String? voterId,
    required String? optionId,
    required Map<String, int>? newOptionVoteCountMap,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveVote,
          [],
          {
            #pollName: pollName,
            #voterId: voterId,
            #optionId: optionId,
            #newOptionVoteCountMap: newOptionVoteCountMap,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, int>> getPollOptionVoteCounts(
          {required String? pollName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPollOptionVoteCounts,
          [],
          {#pollName: pollName},
        ),
        returnValue: _i4.Future<Map<String, int>>.value(<String, int>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i4.Future<Map<String, int>>);

  @override
  _i4.Future<({String? optionId, int? when})?> getUsersVote({
    required String? pollName,
    required String? voterId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsersVote,
          [],
          {
            #pollName: pollName,
            #voterId: voterId,
          },
        ),
        returnValue: _i4.Future<({String? optionId, int? when})?>.value(),
        returnValueForMissingStub:
            _i4.Future<({String? optionId, int? when})?>.value(),
      ) as _i4.Future<({String? optionId, int? when})?>);

  @override
  _i4.Future<Map<String, List<String>>> getVotersByOption({
    required String? pollName,
    required List<String>? pollOptionIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVotersByOption,
          [],
          {
            #pollName: pollName,
            #pollOptionIds: pollOptionIds,
          },
        ),
        returnValue: _i4.Future<Map<String, List<String>>>.value(
            <String, List<String>>{}),
        returnValueForMissingStub: _i4.Future<Map<String, List<String>>>.value(
            <String, List<String>>{}),
      ) as _i4.Future<Map<String, List<String>>>);

  @override
  _i4.Future<_i2.FSFolderNode> createAndPopulateFolderNode({
    required _i6.Reference? ref,
    _i2.FSFolderNode? parentNode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAndPopulateFolderNode,
          [],
          {
            #ref: ref,
            #parentNode: parentNode,
          },
        ),
        returnValue: _i4.Future<_i2.FSFolderNode>.value(_FakeFSFolderNode_0(
          this,
          Invocation.method(
            #createAndPopulateFolderNode,
            [],
            {
              #ref: ref,
              #parentNode: parentNode,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.FSFolderNode>.value(_FakeFSFolderNode_0(
          this,
          Invocation.method(
            #createAndPopulateFolderNode,
            [],
            {
              #ref: ref,
              #parentNode: parentNode,
            },
          ),
        )),
      ) as _i4.Future<_i2.FSFolderNode>);

  @override
  _i4.Future<bool> tokenConfirmed(String? token) => (super.noSuchMethod(
        Invocation.method(
          #tokenConfirmed,
          [token],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
